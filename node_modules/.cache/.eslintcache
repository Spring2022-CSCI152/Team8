[{"/home/ian/Sync/projects/cloned/Team8/src/index.js":"1","/home/ian/Sync/projects/cloned/Team8/src/App.js":"2","/home/ian/Sync/projects/cloned/Team8/src/Editor.js":"3","/home/ian/Sync/projects/cloned/Team8/src/reportWebVitals.js":"4","/home/ian/Sync/projects/cloned/Team8/src/Login.js":"5"},{"size":500,"mtime":1651354362980,"results":"6","hashOfConfig":"7"},{"size":401,"mtime":1651354891338,"results":"8","hashOfConfig":"7"},{"size":1750,"mtime":1651352738289,"results":"9","hashOfConfig":"7"},{"size":362,"mtime":1651352148371,"results":"10","hashOfConfig":"7"},{"size":5851,"mtime":1651352148371,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"10hf7fd",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"/home/ian/Sync/projects/cloned/Team8/src/index.js",[],[],"/home/ian/Sync/projects/cloned/Team8/src/App.js",["29","30"],[],"import {BrowserRouter as Router, Route, Routes} from 'react-router-dom';\nimport Login from './Login';\nimport Editor from './Editor'\nimport {Link} from 'react-router-dom'\n\nfunction App() {\n  return (\n    <Router>\n\t\t<div className=\"App\">\n\t\t  <div className=\"content\">\n\t\t\t\t  <Routes>\n\t\t  <Route path=\"/login\" element={<Login />}/>\n\t\t\t</Routes>\n\t\t  </div>\n\t\t</div>\n\t</Router> \n  );\n}\n\nexport default App;\n","/home/ian/Sync/projects/cloned/Team8/src/Editor.js",[],[],"/home/ian/Sync/projects/cloned/Team8/src/reportWebVitals.js",[],[],"/home/ian/Sync/projects/cloned/Team8/src/Login.js",["31","32","33","34","35","36"],[],"import \"./Login.css\"\nimport React, { useState, useEffect, useContext } from \"react\";\nimport ReactCardFlip from 'react-card-flip';\nimport axios from \"axios\";\n\n//This is a functional component. It holds all the functions\n//within it.\nconst Login = props => {\n\n\t//Handling the Card flip\n\tconst [isFlipped, setIsFlipped] = useState(false);\n\tconst handleClick = () => {\n\t\tsetIsFlipped(!isFlipped);\n\t};\n\n\t//\n\tconst [email, setEmail] = useState('');\n\tconst [password, setPassword] = useState('');\n\tconst [confirmPass, setCPassword] = useState('');\n\tconst [user, setUser] = useState();\n\n\n\tconst [submitted, setSubmitted] = useState(false);\n\tconst [error, setError] = useState(false);\n\n\tuseEffect(() => {\n\t\tconst loggedInUser = localStorage.getItem(\"user\");\n\t\tif (loggedInUser) {\n\t\t\tconst foundUser = JSON.parse(loggedInUser);\n\t\t\tsetUser(foundUser);\n\t\t}\n\t}, []);\n\n\t// Handling the email change\n\tconst handleEmail = (e) => {\n\t\tsetEmail(e.target.value);\n\t\tsetSubmitted(false);\n\t};\n\n\t// Handling the password change\n\tconst handlePassword = (e) => {\n\t\tsetPassword(e.target.value);\n\t\tsetSubmitted(false);\n\t};\n\n\t//Handling the confirm password change\n\tconst handleCPassword = (e) => {\n\t\tsetCPassword(e.target.value);\n\t\tsetSubmitted(false);\n\t};\n\n\t//handles the events that happen when the signup button is clicked\n\tconst handleSignupbtn = (e) => {\n\t\te.preventDefault();\n\n\t\t//if the fields are left blank or the password fields\n\t\t//don't match, it sets the error to true.\n\t\tif (email === '' || password === '' || password !== confirmPass) {\n\t\t\tsetError(true);\n\t\t}\n\t\t//Otherwise, the card is flipped and the sign up info \n\t\t//is sent to server\n\t\telse {\n\t\t\tconsole.log(\"login\")\n\t\t\tsetSubmitted(true);\n\t\t\tsetError(false);\n\t\t\tsetIsFlipped(!isFlipped);\n\t\t\tconst registered = {\n\t\t\t\temail: email,\n\t\t\t\tpassword: password\n\t\t\t}\n\t\t\taxios.post(\"http://localhost:5565/registration\", registered).then((response) => {\n\t\t\t\tconsole.log(response.data)\n\t\t\t\twindow.location = '/login';\n\t\t\t}).catch((res) => {\n\t\t\t\tthis.setState({...this.state, error: res.response.data.password}, console.log(this.state))\n\t\t\t})\n\t\t}\n\t};\n\n\t//handles the events that happen when the Login button is clicked\n\tconst handleLoginbtn = (e) => {\n\t\te.preventDefault();\n\t\t\n\t\t//if the fields are left blank it sets the error to true.\n\t\tif (email === '' || password === '') {\n\t\t\tsetError(true);\n\t\t}\n\t\t//otherwise, the login info gets sent to server and\n\t\t//the user gets sent to the home page.\n\t\telse {\n\t\t\tsetSubmitted(true);\n\t\t\tsetError(false);\n\t\t\tconst user = { email, password };\n\t\t\taxios.post(\"http://localhost:5565/login\", user).then((response) => {\n\t\t\t\t\t\t\tconsole.log(response.data.message)\n\t\t\t\t\t\t\t//setUser(response.data);\n\t\t\t\t\t\t\tif (response.data.message === \"login successful\") {\n\t\t\t\t\t\t\t\tlocalStorage.setItem(\"user\", JSON.stringify(response.data._doc))\n\t\t\t\t\t\t\t\tlocalStorage.setItem(\"email\", JSON.stringify(response.data._doc.email))\n\t\t\t\t\t\t\t\t//setAuthState(true)\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((res) => {\n\t\t\t\t\t\t\tif (user.password === \"\" && user.email === \"\"){document.getElementById(\"error\").innerHTML = \"Must provide email. <br> Must provide password.\"}\n\t\t\t\t\t\t\telse if (user.email === \"\"){document.getElementById(\"error\").innerHTML = \"Must provide email.\"}\n\t\t\t\t\t\t\telse if (user.password === \"\"){document.getElementById(\"error\").innerHTML = \"Must provide password.\"}\n\t\t\t\t\t\t\t//else{document.getElementById(\"error\").innerHTML = \"The email or password is incorrect. Please try again.\"}\n\t\t\t\t\t\t\tconsole.log(res)\n\t\t\t\t\t\t})\n\t\t\tif (user) {\n\t\t\t\twindow.location = '/';\n\t\t\t}\n\t\t}\n\t};\n\n\t//function to render the error message\n\tconst errorMessage = () => {\n\t\treturn (\n\n\t\t\t<div\n\t\t\t\tclassName=\"error\"\n\t\t\t\tstyle={{ display: error ? '' : 'none', }}>\n\t\t\t\t<h3>There's an error with the forms</h3>\n\t\t\t</div>\n\t\t);\n\t};\n\n\t//where all the page style and structure is.\n\treturn (\n\t\t//ReactCardFlip is the container that holds\n\t\t//the containers of the 2 card faces.\n\t\t<ReactCardFlip isFlipped={isFlipped} flipDirection=\"horizontal\" flipSpeedFrontToBack=\"1.5\" flipSpeedBackToFront=\"1.5\" containerStyle={{ maxWidth: 1080, margin: 0, margin: \"auto\" }}>\n\n\t\t\t<div style={{//style and structure of the signup side\n\t\t\t\tbackgroundColor: \"#EEEEEE\",\n\t\t\t\theight: 300,\n\t\t\t\twidth: 300,\n\t\t\t\tdisplay: \"flex\",\n\t\t\t\tjustifyContent: \"space-around\",\n\t\t\t\talignItems: \"center\",\n\t\t\t\tflexDirection: \"column\",\n\t\t\t\tmaxWidth: 1080, margin: 0, margin: \"auto\",\n\t\t\t}}\n\t\t\t>\n\t\t\t\t<h1>Signup</h1>\n\t\t\t\t<div className=\"messages\">\n\t\t\t\t\t{errorMessage()}\n\t\t\t\t</div>\n\t\t\t\t<form>\n\t\t\t\t\t<input type=\"email\" style={{ fontSize: 18 }} placeholder=\"Email\" onChange={handleEmail} value={email} /><br />\n\t\t\t\t\t<input type=\"password\" style={{ fontSize: 18 }} placeholder=\"password\" onChange={handlePassword} value={password} /><br />\n\t\t\t\t\t<input type=\"password\" style={{ fontSize: 18 }} placeholder=\"confirm password\" onChange={handleCPassword} value={confirmPass} />\n\t\t\t\t</form>\n\t\t\t\t<button className=\"btn\" type=\"submit\" onClick={handleSignupbtn}>Signup</button>\n\t\t\t\t<button onClick={handleClick} >Already have an account?</button>\n\t\t\t</div>\n\t\t\t<div style={{ //style and structure of the login side\n\t\t\t\tbackgroundColor: \"#EEEEEE\",\n\t\t\t\theight: 300,\n\t\t\t\twidth: 300,\n\t\t\t\tdisplay: \"flex\",\n\t\t\t\tjustifyContent: \"space-around\",\n\t\t\t\talignItems: \"center\",\n\t\t\t\tflexDirection: \"column\",\n\t\t\t\tmaxWidth: 1080, margin: 0, margin: \"auto\",\n\t\t\t}}\n\t\t\t>\n\t\t\t\t<h1>Login</h1>\n\t\t\t\t<div className=\"messages\">\n\t\t\t\t\t{errorMessage()}\n\t\t\t\t</div>\n\t\t\t\t<form>\n\t\t\t\t\t<input type=\"email\" style={{ fontSize: 18 }} placeholder=\"Email\" onChange={handleEmail} value={email} /><br />\n\t\t\t\t\t<input type=\"password\" style={{ fontSize: 18 }} placeholder=\"password\" onChange={handlePassword} value={password} /><br />\n\t\t\t\t</form>\n\t\t\t\t<button className=\"btn\" type=\"submit\" onClick={handleLoginbtn}>Login</button>\n\t\t\t\t<button onClick={handleClick}>Don't have an account?</button>\n\t\t\t</div>\n\t\t</ReactCardFlip>\n\t);\n}\n\nexport default Login;",{"ruleId":"37","severity":1,"message":"38","line":3,"column":8,"nodeType":"39","messageId":"40","endLine":3,"endColumn":14},{"ruleId":"37","severity":1,"message":"41","line":4,"column":9,"nodeType":"39","messageId":"40","endLine":4,"endColumn":13},{"ruleId":"37","severity":1,"message":"42","line":2,"column":38,"nodeType":"39","messageId":"40","endLine":2,"endColumn":48},{"ruleId":"37","severity":1,"message":"43","line":20,"column":9,"nodeType":"39","messageId":"40","endLine":20,"endColumn":13},{"ruleId":"37","severity":1,"message":"44","line":23,"column":9,"nodeType":"39","messageId":"40","endLine":23,"endColumn":18},{"ruleId":"45","severity":1,"message":"46","line":133,"column":166,"nodeType":"47","messageId":"48","endLine":133,"endColumn":172},{"ruleId":"45","severity":1,"message":"46","line":143,"column":32,"nodeType":"47","messageId":"48","endLine":143,"endColumn":38},{"ruleId":"45","severity":1,"message":"46","line":166,"column":32,"nodeType":"47","messageId":"48","endLine":166,"endColumn":38},"no-unused-vars","'Editor' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'useContext' is defined but never used.","'user' is assigned a value but never used.","'submitted' is assigned a value but never used.","no-dupe-keys","Duplicate key 'margin'.","ObjectExpression","unexpected"]